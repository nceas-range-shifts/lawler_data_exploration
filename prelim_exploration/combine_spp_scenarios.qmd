---
title: "Look for spp crossing borders"
format: 
  html:
    embed-resources: true
execute:
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(terra)
library(sf)
library(rnaturalearth)
library(here)
```

## Gather maps and aggregate

For each species in the sample set (10 spp for each taxon), gather all future scenario maps and aggregate, summing and dividing by 3 to make a "probability" map for future distributions, and crop to just the lower 48 US states (and a little Canada and Mexico).  Then crop the historical maps to the same extent.  Write out these files to an output directory (`out`).

Why just the lower 48?  Alaska looks like it gets a lot of species from much farther south, which seems questionable.  So let's focus on the same area of interest from the Lawler paper, i.e., lower 48.

### aggregate future scenarios

```{r}
sample_maps <- list.files(here('lawler_spp_sample'), 
                          full.names = TRUE, recursive = TRUE, pattern = '.tif')
spp_df <- data.frame(f = sample_maps,
                     spp = basename(sample_maps) %>%
                       str_remove('(_gf85|_in85|_mc85|_bias).+') %>%
                       str_replace_all('_', ' '),
                     tax = basename(dirname(sample_maps)))

spp_vec <- spp_df$spp %>% unique()

us_extent <- ext(c(xmin = -130, xmax = -65, ymin = 23, ymax = 50))

for(s in spp_vec) {
  f_out <- here('out/future', sprintf('%s.tif', str_replace(tolower(s), ' ', '_')))
  if(file.exists(f_out)) next()
  
  s_future_df <- spp_df %>%
    filter(spp == s & !str_detect(f, 'Historical'))
  s_future_map <- rast(s_future_df$f) %>%
    crop(us_extent) %>%
    sum(na.rm = TRUE)
  s_future_map <- s_future_map / nrow(s_future_df)
  writeRaster(s_future_map, f_out)
}

x <- rast(here('out/future/taxodium_mucronatum.tif'))
plot(x, main = 'Taxodium mucronatum, future')
```

Note, Taxodium mucronatum is included in both "trees" and "plants" taxa for some reason, so the probability goes in 16.67% increments, not 33.3% as all other maps would go.

### crop historical maps

```{r}
for(s in spp_vec) {
  ### s <- 'Taxodium mucronatum'
  f_out <- here('out/historical', sprintf('%s.tif', str_replace(tolower(s), ' ', '_')))
  if(file.exists(f_out)) next()
  
  s_hist_df <- spp_df %>%
    filter(spp == s & str_detect(f, 'Historical'))
  s_hist_map <- rast(s_hist_df$f) %>%
    crop(us_extent) %>%
    sum(na.rm = TRUE)
  s_hist_map <- s_hist_map / nrow(s_hist_df)
  writeRaster(s_hist_map, f_out)
}
x <- rast(here('out/historical/taxodium_mucronatum.tif'))
plot(x, main = 'Taxodium mucronatum, historical')
```

Note, again, Taxodium mucronatum is in there twice for some reason - most spp should have only a single map.

## Generate jurisdiction map

Let's generate a simple jurisdiction map - US states, and Canada and Mexico.

```{r}
states_sf <- ne_states(returnclass = 'sf', country = c('Mexico', 'Canada', 'United States of America')) 

state_id_df <- states_sf %>%
  st_drop_geometry() %>%
  mutate(juris = ifelse(adm0_a3 == 'USA', name, admin)) %>%
  select(gn_id, juris)
### plot(states_sf %>% select(iso_a2))
states_rast <- rasterize(states_sf, x, field = 'gn_id')
plot(states_rast)

writeRaster(states_rast, here('out/states.tif'), overwrite = TRUE)
```

## Rough pass at classification?

For each spp let's create a dataframe of jurisdictions and cell values...

```{r}
for(s in spp_vec) {
  ### s <- 'Taxodium mucronatum'
  s_file <- sprintf('%s.tif', str_replace(tolower(s), ' ', '_'))
  f_out <- here('out/jurisdictions', s_file)
  if(file.exists(f_out)) next()
  
  s_hist_rast <- rast(here('out/historical', s_file))
  s_future_rast <- rast(here('out/future', s_file))
  s_df <- data.frame(values(s_hist_rast), values(s_future_rast), values(states_rast)) %>%
    setNames(c('historical', 'future', 'gn_id')) %>%
    filter(!is.na(gn_id)) %>%
    left_join(state_id_df, by = 'gn_id') %>%
    filter(!is.na(historical) | !is.na(future)) %>%
    group_by(juris) %>%
    summarize(n_historical = sum(historical > .25),
              n_future = sum(future > .5))
  write_csv(s_df, here('out/jurisdictions', s_file))
}
```

### gather results

```{r}
juris_fs <- list.files(here('out/jurisdictions'), full.names = TRUE)

all_juris_df <- lapply(juris_fs, read_csv, show_col_types = FALSE) %>%
  setNames(basename(juris_fs)) %>%
  bind_rows(.id = 'f') %>%
  mutate(spp = f %>% str_remove('.tif$') %>% str_replace('_', ' ') %>% str_to_sentence()) %>%
  select(-f) %>%
  mutate(status = case_when(n_historical == 0 &  n_future > 0 ~ 'entry into new',
                            n_historical > 0  & n_future == 0 ~ 'exit from historical',
                            n_historical == 0 & n_future == 0 ~ 'no presence',
                            TRUE ~ 'continued presence'))

all_juris_df$status %>% table()
```

